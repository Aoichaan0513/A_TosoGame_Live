plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def projectChannel = 'Beta'
def projectVersion = '1.2.0'
def projectBuildDate = new Date().format('yy.MMdd.HHmm')

group = 'jp.aoichaan0513'
version = "$projectChannel-${projectVersion}_$projectBuildDate"

repositories {
    mavenCentral()

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name = 'wesjd-repo'
        url = 'https://nexus.wesjd.net/repository/thirdparty/'
    }

    maven {
        name = 'jitpack.io'
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.15.2-R0.1-SNAPSHOT'
    compile files('libs/Spigot-1.15.2.jar')

    compile group: 'org.json', name: 'json', version: '20190722'
    compile group: 'com.github.WesJD', name: 'AnvilGUI', version: '-SNAPSHOT'

    compile group: 'io.netty', name: 'netty-all', version: '5.0.0.Alpha2'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.5.0'

}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: ['version': new String("$projectChannel-$projectVersion"), 'projectChannel': projectChannel, 'projectVersion': projectVersion, 'projectBuildDate': projectBuildDate]
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'